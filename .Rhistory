library(ggplot2)
library(viridis)
install.packages('viridis')
library(ggplot2)
library(viridis)
library(tidyverse)
posterior <- rstan::extract(fit)
agg_strength <- posterior$att[, 8, ] - posterior$def[, 8, ]
agg_strength_df <- melt(agg_strength)
library(ggplot2)
library(viridis)
library(tidyverse)
library(tidyr)
posterior <- rstan::extract(fit)
agg_strength <- posterior$att[, 8, ] - posterior$def[, 8, ]
agg_strength_df <- melt(agg_strength)
install.packages('reshape')
library(reshape)
posterior <- rstan::extract(fit)
agg_strength <- posterior$att[, 8, ] - posterior$def[, 8, ]
agg_strength_df <- melt(agg_strength)
colnames(agg_strength_df) <- c('Iteration', 'Team', 'Strength')
team_names <- name(team_ids)
posterior <- rstan::extract(fit)
agg_strength <- posterior$att[, 8, ] - posterior$def[, 8, ]
agg_strength_df <- melt(agg_strength)
colnames(agg_strength_df) <- c('Iteration', 'Team', 'Strength')
team_names <- names(team_ids)
ordered_team_names <- sort(team_names)
team_mapping <- match(team_names, ordered_team_names)
agg_strength_df$Team <- factor(team_mapping[agg_strength$Team], levels = 1:length(ordered_team_names), labels = ordered_team_names)
agg_strength_df$Team <- factor(team_mapping[agg_strength_df$Team], levels = 1:length(ordered_team_names), labels = ordered_team_names)
ggplot(agg_strength_df, aes(x = Strength, fill = Team)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, color = 'red',  linetype = 'dashed') +
facet_wrap(~ Team, scale = 'free', labeller = labeller(Team = label_value)) +
ggtitle('Distribution of Aggregate Team Strengths') +
xlab('Aggregate Strength') +
ylab('Density') + scall_fill_viridis_d(option = 'C', direction = 1) +
theme_minimal() +
theme(legend.position = 'none')
ggplot(agg_strength_df, aes(x = Strength, fill = Team)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, color = 'red',  linetype = 'dashed') +
facet_wrap(~ Team, scale = 'free', labeller = labeller(Team = label_value)) +
ggtitle('Distribution of Aggregate Team Strengths') +
xlab('Aggregate Strength') +
ylab('Density') + scale_fill_viridis_d(option = 'C', direction = 1) +
theme_minimal() +
theme(legend.position = 'none')
posterior <- rstan::extract(fit)
agg_strength <- posterior$att[, 9, ] - posterior$def[, 9, ]
agg_strength_df <- melt(agg_strength)
colnames(agg_strength_df) <- c('Iteration', 'Team', 'Strength')
team_names <- names(team_ids)
ordered_team_names <- sort(team_names)
team_mapping <- match(team_names, ordered_team_names)
agg_strength_df$Team <- factor(team_mapping[agg_strength_df$Team], levels = 1:length(ordered_team_names), labels = ordered_team_names)
ggplot(agg_strength_df, aes(x = Strength, fill = Team)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, color = 'red',  linetype = 'dashed') +
facet_wrap(~ Team, scale = 'free', labeller = labeller(Team = label_value)) +
ggtitle('Distribution of Aggregate Team Strengths') +
xlab('Aggregate Strength') +
ylab('Density') + scale_fill_viridis_d(option = 'C', direction = 1) +
theme_minimal() +
theme(legend.position = 'none')
nhl_stats <- nhl_game_stats %>%
dplyr::group_by(season, home_abbreviation) %>%
dplyr::summarize(xg_for = sum(home_es_xg + home_pp_xg + home_sh_xg + home_ot_xg, na.rm = TRUE),
xg_against = sum(away_es_xg + away_pp_xg + away_sh_xg + home_ot_xg, na.rm = TRUE)) %>%
dplyr::rename(home_abbreviation = team) %>%
base::rbind(nhl_game_stats %>%
dplyr::group_by(season, away_abbreviation) %>%
dplyr::summarize(xg_for = sum(away_es_xg + home_pp_xg + home_sh_xg + home_ot_xg, na.rm = TRUE),
xg_against = sum(home_es_xg + away_pp_xg + away_sh_xg + home_ot_xg, na.rm = TRUE)) %>%
dplyr::rename(away_abbreviation = team)) %>%
dplyr::group_by(team) %>%
dplyr::summarize(xg_for = sum(xg_for, na.rm = TRUE),
xg_against = sum(xg_against, na.rm = TRUE)) %>%
dplyr::mutate(xg_diff = xg_for - xg_aginst,
xg_diff_per_g = xg_diff / 82) %>%
dplyr::ungroup() %>%
dplyr::group_by(season) %>%
dplyr::mutate(league_avg_xg_for = mean(xg_for) / 82,
league_avg_xg_against = mean(xg_against) / 82) %>%
dplyr::ungroup() %>%
dplyr::mutate(exp_xg_for = league_avg_xg_for + (diff_g / 2),
exp_xg_against = league_avg_xg_for + (diff_g / 2))
nhl_stats <- nhl_game_stats %>%
dplyr::group_by(season, home_abbreviation) %>%
dplyr::summarize(xg_for = sum(home_es_xg + home_pp_xg + home_sh_xg + home_ot_xg, na.rm = TRUE),
xg_against = sum(away_es_xg + away_pp_xg + away_sh_xg + home_ot_xg, na.rm = TRUE)) %>%
dplyr::rename(team = home_abbreviation) %>%
base::rbind(nhl_game_stats %>%
dplyr::group_by(season, away_abbreviation) %>%
dplyr::summarize(xg_for = sum(away_es_xg + home_pp_xg + home_sh_xg + home_ot_xg, na.rm = TRUE),
xg_against = sum(home_es_xg + away_pp_xg + away_sh_xg + home_ot_xg, na.rm = TRUE)) %>%
dplyr::rename(team = away_abbreviation)) %>%
dplyr::group_by(team) %>%
dplyr::summarize(xg_for = sum(xg_for, na.rm = TRUE),
xg_against = sum(xg_against, na.rm = TRUE)) %>%
dplyr::mutate(xg_diff = xg_for - xg_aginst,
xg_diff_per_g = xg_diff / 82) %>%
dplyr::ungroup() %>%
dplyr::group_by(season) %>%
dplyr::mutate(league_avg_xg_for = mean(xg_for) / 82,
league_avg_xg_against = mean(xg_against) / 82) %>%
dplyr::ungroup() %>%
dplyr::mutate(exp_xg_for = league_avg_xg_for + (diff_g / 2),
exp_xg_against = league_avg_xg_for + (diff_g / 2))
nhl_stats <- nhl_game_stats %>%
dplyr::group_by(season, home_abbreviation) %>%
dplyr::summarize(xg_for = sum(home_es_xg + home_pp_xg + home_sh_xg + home_ot_xg, na.rm = TRUE),
xg_against = sum(away_es_xg + away_pp_xg + away_sh_xg + home_ot_xg, na.rm = TRUE)) %>%
dplyr::rename(team = home_abbreviation) %>%
base::rbind(nhl_game_stats %>%
dplyr::group_by(season, away_abbreviation) %>%
dplyr::summarize(xg_for = sum(away_es_xg + home_pp_xg + home_sh_xg + home_ot_xg, na.rm = TRUE),
xg_against = sum(home_es_xg + away_pp_xg + away_sh_xg + home_ot_xg, na.rm = TRUE)) %>%
dplyr::rename(team = away_abbreviation)) %>%
dplyr::group_by(team) %>%
dplyr::summarize(xg_for = sum(xg_for, na.rm = TRUE),
xg_against = sum(xg_against, na.rm = TRUE)) %>%
dplyr::mutate(xg_diff = xg_for - xg_against,
xg_diff_per_g = xg_diff / 82) %>%
dplyr::ungroup() %>%
dplyr::group_by(season) %>%
dplyr::mutate(league_avg_xg_for = mean(xg_for) / 82,
league_avg_xg_against = mean(xg_against) / 82) %>%
dplyr::ungroup() %>%
dplyr::mutate(exp_xg_for = league_avg_xg_for + (diff_g / 2),
exp_xg_against = league_avg_xg_for + (diff_g / 2))
nhl_stats <- nhl_game_stats %>%
dplyr::group_by(season, home_abbreviation) %>%
dplyr::summarize(xg_for = sum(home_es_xg + home_pp_xg + home_sh_xg + home_ot_xg, na.rm = TRUE),
xg_against = sum(away_es_xg + away_pp_xg + away_sh_xg + home_ot_xg, na.rm = TRUE)) %>%
dplyr::rename(team = home_abbreviation) %>%
base::rbind(nhl_game_stats %>%
dplyr::group_by(season, away_abbreviation) %>%
dplyr::summarize(xg_for = sum(away_es_xg + home_pp_xg + home_sh_xg + home_ot_xg, na.rm = TRUE),
xg_against = sum(home_es_xg + away_pp_xg + away_sh_xg + home_ot_xg, na.rm = TRUE)) %>%
dplyr::rename(team = away_abbreviation)) %>%
dplyr::group_by(team, season) %>%
dplyr::summarize(xg_for = sum(xg_for, na.rm = TRUE),
xg_against = sum(xg_against, na.rm = TRUE)) %>%
dplyr::mutate(xg_diff = xg_for - xg_against,
xg_diff_per_g = xg_diff / 82) %>%
dplyr::ungroup() %>%
dplyr::group_by(season) %>%
dplyr::mutate(league_avg_xg_for = mean(xg_for) / 82,
league_avg_xg_against = mean(xg_against) / 82) %>%
dplyr::ungroup() %>%
dplyr::mutate(exp_xg_for = league_avg_xg_for + (diff_g / 2),
exp_xg_against = league_avg_xg_for + (diff_g / 2))
nhl_stats <- nhl_game_stats %>%
dplyr::group_by(season, home_abbreviation) %>%
dplyr::summarize(xg_for = sum(home_es_xg + home_pp_xg + home_sh_xg + home_ot_xg, na.rm = TRUE),
xg_against = sum(away_es_xg + away_pp_xg + away_sh_xg + home_ot_xg, na.rm = TRUE),
goals_for = sum(home_es_goals + home_pp_goals + home_sh_goals + home_ot_goals, na.rm = TRUE),
goals_against = sum(away_es_goals + away_pp_goals + away_sh_goals + home_ot_goals, na.rm = TRUE)) %>%
dplyr::rename(team = home_abbreviation) %>%
base::rbind(nhl_game_stats %>%
dplyr::group_by(season, away_abbreviation) %>%
dplyr::summarize(xg_for = sum(away_es_xg + home_pp_xg + home_sh_xg + home_ot_xg, na.rm = TRUE),
xg_against = sum(home_es_xg + away_pp_xg + away_sh_xg + home_ot_xg, na.rm = TRUE),
goals_for = sum(away_es_goals + home_pp_goals + home_sh_goals + home_ot_goals, na.rm = TRUE),
goals_against = sum(home_es_goals + away_pp_goals + away_sh_goals + home_ot_goals, na.rm = TRUE)) %>%
dplyr::rename(team = away_abbreviation)) %>%
dplyr::group_by(team, season) %>%
dplyr::summarize(xg_for = sum(xg_for, na.rm = TRUE),
xg_against = sum(xg_against, na.rm = TRUE),
goals_for = sum(goals_for, na.rm = TRUE),
goals_against = sum(goals_against, na.rm = TRUE)) %>%
dplyr::mutate(xg_diff = xg_for - xg_against,
xg_diff_g = xg_diff / 82,
goals_diff = goals_for - goals_against,
goals_diff_g = goals_diff / 82) %>%
dplyr::ungroup() %>%
dplyr::group_by(season) %>%
dplyr::mutate(league_avg_xg_for = mean(xg_for) / 82,
league_avg_xg_against = mean(xg_against) / 82,
league_avg_goals_for = mean(goals_for) / 82,
league_avg_goals_against = mean(goals_against) / 82) %>%
dplyr::ungroup() %>%
dplyr::mutate(exp_xg_for = league_avg_xg_for + (xg_diff_g / 2),
exp_xg_against = league_avg_xg_for + (xg_diff_g / 2),
exp_goals_for = league_avg_goals_for + (goals_diff_g / 2),
exp_goals_against = league_avg_goals_against + (goals_diff_g / 2))
ggplot(nhl_stats, aes(x = reorder(team, goals_diff), y = goals_diff, fill = goals_diff)) +
geom_bar(stat = 'identity') +
scale_fill_viridis_c(option = 'G', direction = -1) +
coord_flip() +
labs(title = 'NHL Team Goal Difference',
x = 'Team',
y = 'Goal Difference Per Game',
fill = 'Goal Difference') +
theme_minimal() +
theme(legend.position = 'none')
nhl_stats_2023 <- nhl_stats %>%
dplyr::filter(seasons = '20232024')
nhl_stats_2023 <- nhl_stats %>%
dplyr::filter(seasons == '20232024')
nhl_stats_2023 <- nhl_stats %>%
dplyr::filter(season == '20232024')
ggplot(nhl_stats_2023, aes(x = reorder(team, goals_diff), y = goals_diff, fill = goals_diff)) +
geom_bar(stat = 'identity') +
scale_fill_viridis_c(option = 'G', direction = -1) +
coord_flip() +
labs(title = 'NHL Team Goal Difference',
x = 'Team',
y = 'Goal Difference Per Game',
fill = 'Goal Difference') +
theme_minimal() +
theme(legend.position = 'none')
unique(nhl_stats$season)
ggplot(nhl_stats_2023, aes(x = reorder(team, goals_diff), y = goals_diff, fill = goals_diff)) +
geom_bar(stat = 'identity') +
scale_fill_viridis_c(option = 'G', direction = -1) +
coord_flip() +
labs(title = 'NHL Team Goal Difference',
x = 'Team',
y = 'Goal Difference Per Game',
fill = 'Goal Difference') +
theme_minimal() +
theme(legend.position = 'none')
nhl_stats_2023 <- nhl_stats %>%
dplyr::filter(season == '20222023')
ggplot(nhl_stats_2023, aes(x = reorder(team, goals_diff), y = goals_diff, fill = goals_diff)) +
geom_bar(stat = 'identity') +
scale_fill_viridis_c(option = 'G', direction = -1) +
coord_flip() +
labs(title = 'NHL Team Goal Difference',
x = 'Team',
y = 'Goal Difference Per Game',
fill = 'Goal Difference') +
theme_minimal() +
theme(legend.position = 'none')
colnames(nhl_pbp)
unique(nhl_pbp$season_type)
nhl_pbp <- hockeyR::load_pbp(season = 2015:2024)
nhl_pbp <- hockeyR::load_pbp(season = 2015:2024)
rm(nhl_pbp)
nhl_pbp <- hockeyR::load_pbp(season = 2015:2023)
rm(nhl_pbp)
nhl_pbp <- hockeyR::load_pbp(season = 2015:2024)
nhl_pbp <- hockeyR::load_pbp(season = 2015:2023)
nhl_game_stats <- nhl_pbp %>%
dplyr::filter(season_type == 'R') %>%
dplyr::group_by(season, game_id, home_abbreviation, away_abbreviation) %>%
dplyr::summarize(
home_es_xg = sum(xg[strength_code %in% c('EV', 'EVEN') & period %in% c(1:3) & home_abbreviation == event_team_abbr], na.rm = TRUE),
home_pp_xg = sum(xg[strength_code %in% c('PPG', 'PP') & period %in% c(1:3) & home_abbreviation == event_team_abbr], na.rm = TRUE),
home_sh_xg = sum(xg[strength_code %in% c('SHG', 'SH') & period %in% c(1:3) & home_abbreviation == event_team_abbr], na.rm = TRUE),
home_ot_xg = sum(xg[!(period %in% c(1:3)) & home_abbreviation == event_team_abbr], na.rm = TRUE),
away_es_xg = sum(xg[strength_code %in% c('EV', 'EVEN') & period %in% c(1:3) & away_abbreviation == event_team_abbr], na.rm = TRUE),
away_pp_xg = sum(xg[strength_code %in% c('PPG', 'PP') & period %in% c(1:3) & away_abbreviation == event_team_abbr], na.rm = TRUE),
away_sh_xg = sum(xg[strength_code %in% c('SHG', 'SH') & period %in% c(1:3) & away_abbreviation == event_team_abbr], na.rm = TRUE),
away_ot_xg = sum(xg[!(period %in% c(1:3)) & away_abbreviation == event_team_abbr], na.rm = TRUE),
home_es_goals = sum(event_type == "GOAL" & strength_code %in% c('EV', 'EVEN') & period %in% c(1:3) & home_abbreviation == event_team_abbr, na.rm = TRUE),
home_pp_goals = sum(event_type == "GOAL" & strength_code %in% c('PPG', 'PP') & period %in% c(1:3) & home_abbreviation == event_team_abbr, na.rm = TRUE),
home_sh_goals = sum(event_type == "GOAL" & strength_code %in% c('SHG', 'SH') & period %in% c(1:3) & home_abbreviation == event_team_abbr, na.rm = TRUE),
home_ot_goals = sum(event_type == "GOAL" & !(period %in% c(1:3)) & home_abbreviation == event_team_abbr, na.rm = TRUE),
away_es_goals = sum(event_type == "GOAL" & strength_code %in% c('EV', 'EVEN') & period %in% c(1:3) & away_abbreviation == event_team_abbr, na.rm = TRUE),
away_pp_goals = sum(event_type == "GOAL" & strength_code %in% c('PPG', 'PP') & period %in% c(1:3) & away_abbreviation == event_team_abbr, na.rm = TRUE),
away_sh_goals = sum(event_type == "GOAL" & strength_code %in% c('SHG', 'SH') & period %in% c(1:3) & away_abbreviation == event_team_abbr, na.rm = TRUE),
away_ot_goals = sum(event_type == "GOAL" & !(period %in% c(1:3)) & away_abbreviation == event_team_abbr, na.rm = TRUE),
.groups = "drop"
)
teams <- unique(c(nhl_game_stats$home_abbreviation, nhl_game_stats$away_abbreviation))
team_ids <- setNames(seq_along(teams), teams)
nhl_stats <- nhl_game_stats %>%
dplyr::group_by(season, home_abbreviation) %>%
dplyr::summarize(xg_for = sum(home_es_xg + home_pp_xg + home_sh_xg + home_ot_xg, na.rm = TRUE),
xg_against = sum(away_es_xg + away_pp_xg + away_sh_xg + home_ot_xg, na.rm = TRUE),
goals_for = sum(home_es_goals + home_pp_goals + home_sh_goals + home_ot_goals, na.rm = TRUE),
goals_against = sum(away_es_goals + away_pp_goals + away_sh_goals + home_ot_goals, na.rm = TRUE)) %>%
dplyr::rename(team = home_abbreviation) %>%
base::rbind(nhl_game_stats %>%
dplyr::group_by(season, away_abbreviation) %>%
dplyr::summarize(xg_for = sum(away_es_xg + home_pp_xg + home_sh_xg + home_ot_xg, na.rm = TRUE),
xg_against = sum(home_es_xg + away_pp_xg + away_sh_xg + home_ot_xg, na.rm = TRUE),
goals_for = sum(away_es_goals + home_pp_goals + home_sh_goals + home_ot_goals, na.rm = TRUE),
goals_against = sum(home_es_goals + away_pp_goals + away_sh_goals + home_ot_goals, na.rm = TRUE)) %>%
dplyr::rename(team = away_abbreviation)) %>%
dplyr::group_by(team, season) %>%
dplyr::summarize(xg_for = sum(xg_for, na.rm = TRUE),
xg_against = sum(xg_against, na.rm = TRUE),
goals_for = sum(goals_for, na.rm = TRUE),
goals_against = sum(goals_against, na.rm = TRUE)) %>%
dplyr::mutate(xg_diff = xg_for - xg_against,
xg_diff_g = xg_diff / 82,
goals_diff = goals_for - goals_against,
goals_diff_g = goals_diff / 82) %>%
dplyr::ungroup() %>%
dplyr::group_by(season) %>%
dplyr::mutate(league_avg_xg_for = mean(xg_for) / 82,
league_avg_xg_against = mean(xg_against) / 82,
league_avg_goals_for = mean(goals_for) / 82,
league_avg_goals_against = mean(goals_against) / 82) %>%
dplyr::ungroup() %>%
dplyr::mutate(exp_xg_for = league_avg_xg_for + (xg_diff_g / 2),
exp_xg_against = league_avg_xg_for + (xg_diff_g / 2),
exp_goals_for = league_avg_goals_for + (goals_diff_g / 2),
exp_goals_against = league_avg_goals_against + (goals_diff_g / 2))
nhl_stats_2022 <- nhl_stats %>%
dplyr::filter(season == '20222023')
ggplot(nhl_stats_2022, aes(x = reorder(team, goals_diff), y = goals_diff, fill = goals_diff)) +
geom_bar(stat = 'identity') +
scale_fill_viridis_c(option = 'G', direction = -1) +
coord_flip() +
labs(title = 'NHL Team Goal Difference',
x = 'Team',
y = 'Goal Difference Per Game',
fill = 'Goal Difference') +
theme_minimal() +
theme(legend.position = 'none')
View(nhl_stats_2022)
team_levels <- unique(c(nhl_game_stats$home_abbreviation, nhl_game_stats$away_abbreviation))
nhl_stan_data <- list(
N = nrow(nhl_game_stats),
T = length(unique(c(nhl_game_stats$home_abbreviation, nhl_game_stats$away_abbreviation))),
S = length(unique(nhl_game_stats$season)),
home_team = as.numeric(factor(nhl_game_stats$home_abbreviation, levels = team_levels)),
away_team = as.numeric(factor(nhl_game_stats$away_abbreviation, levels = team_levels)),
home_xG = nhl_game_stats$home_es_xg + nhl_game_stats$home_pp_xg + nhl_game_stats$home_sh_xg + nhl_game_stats$home_ot_xg,
away_xG = nhl_game_stats$away_es_xg + nhl_game_stats$away_pp_xg + nhl_game_stats$away_sh_xg + nhl_game_stats$away_ot_xg,
home_goals = nhl_game_stats$home_es_goals + nhl_game_stats$home_pp_goals + nhl_game_stats$home_sh_goals + nhl_game_stats$home_ot_goals,
away_goals = nhl_game_stats$away_es_goals + nhl_game_stats$away_pp_goals + nhl_game_stats$away_sh_goals + nhl_game_stats$away_ot_goals,
season = as.numeric(as.factor(nhl_game_stats$season))
)
nhl_stan_model <- "
data {
int<lower=1> N; // Number of games
int<lower=1> T; // Number of teams
int<lower=1> S; // Number of seasons
int home_team[N]; // Home team index
int away_team[N]; // Away team index
real home_xG[N]; // Home team's expected goals (xG)
real away_xG[N]; // Away team's expected goals (xG)
int home_goals[N]; // Actual goals scored by home team
int away_goals[N]; // Actual goals scored by away team
int season[N]; // Season index for each game
}
parameters {
real home_advantage[S]; // Home advantage per season
real goal_mean[S]; // Goal mean per season
real<lower=0> sigma_att;
real<lower=0> sigma_def;
matrix[S, T] att_raw;
matrix[S, T] def_raw;
}
transformed parameters {
matrix[S, T] att;
matrix[S, T] def;
// Centering xG to remove team effects
for (s in 1:S) {
att[s] = att_raw[s] - mean(att_raw[s]);
def[s] = def_raw[s] - mean(def_raw[s]);
}
}
model {
// Priors
for (s in 1:S) {
home_advantage[s] ~ normal(0, 1);
goal_mean[s] ~ normal(0, 1);
sigma_att ~ normal(0, 1);
sigma_def ~ normal(0, 1);
att_raw[s] ~ normal(0, sigma_att);
def_raw[s] ~ normal(0, sigma_def);
}
// Likelihood: Model actual goals using Poisson distribution with log link
for (i in 1:N) {
// Home team's goals
home_goals[i] ~ poisson_log(
home_advantage[season[i]] +
att[season[i], home_team[i]] +
def[season[i], away_team[i]] +
goal_mean[season[i]] +
home_xG[i] // Incorporate home team's xG into the log rate
);
// Away team's goals
away_goals[i] ~ poisson_log(
att[season[i], away_team[i]] +
def[season[i], home_team[i]] +
goal_mean[season[i]] +
away_xG[i] // Incorporate away team's xG into the log rate
);
}
}
"
fit <- stan(
model_code = nhl_stan_model,
data = nhl_stan_data,
iter = 4000,
warmup = 1000,
chains = 2,
cores = 6,
seed = 1967,
init = "random",
control = list(max_treedepth = 10))
posterior <- rstan::extract(fit)
agg_strength <- posterior$att[, 9, ] - posterior$def[, 9, ]
agg_strength_df <- melt(agg_strength)
colnames(agg_strength_df) <- c('Iteration', 'Team', 'Strength')
team_names <- names(team_ids)
ordered_team_names <- sort(team_names)
team_mapping <- match(team_names, ordered_team_names)
agg_strength_df$Team <- factor(team_mapping[agg_strength_df$Team], levels = 1:length(ordered_team_names), labels = ordered_team_names)
ggplot(agg_strength_df, aes(x = Strength, fill = Team)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, color = 'red',  linetype = 'dashed') +
facet_wrap(~ Team, scale = 'free', labeller = labeller(Team = label_value)) +
ggtitle('Distribution of Aggregate Team Strengths') +
xlab('Aggregate Strength') +
ylab('Density') + scale_fill_viridis_d(option = 'C', direction = 1) +
theme_minimal() +
theme(legend.position = 'none')
team_levels <- unique(c(nhl_game_stats$home_abbreviation, nhl_game_stats$away_abbreviation))
nhl_stan_data <- list(
N = nrow(nhl_game_stats),
T = length(unique(c(nhl_game_stats$home_abbreviation, nhl_game_stats$away_abbreviation))),
S = length(unique(nhl_game_stats$season)),
home_team = as.numeric(factor(nhl_game_stats$home_abbreviation, levels = team_levels)),
away_team = as.numeric(factor(nhl_game_stats$away_abbreviation, levels = team_levels)),
home_goals = nhl_game_stats$home_es_goals + nhl_game_stats$home_pp_goals + nhl_game_stats$home_sh_goals + nhl_game_stats$home_ot_goals,
away_goals = nhl_game_stats$away_es_goals + nhl_game_stats$away_pp_goals + nhl_game_stats$away_sh_goals + nhl_game_stats$away_ot_goals,
season = as.numeric(as.factor(nhl_game_stats$season))
)
nhl_stan_model <- "
data {
int<lower=1> N; // Number of games
int<lower=1> T; // Number of teams
int<lower=1> S; // Number of seasons
int home_team[N]; // Home team index
int away_team[N]; // Away team index
int home_goals[N]; // Actual goals scored by home team
int away_goals[N]; // Actual goals scored by away team
int season[N]; // Season index for each game
}
parameters {
real home_advantage[S]; // Home advantage per season
real goal_mean[S]; // Goal mean per season
real<lower=0> sigma_att;
real<lower=0> sigma_def;
matrix[S, T] att_raw;
matrix[S, T] def_raw;
}
transformed parameters {
matrix[S, T] att;
matrix[S, T] def;
// Centering xG to remove team effects
for (s in 1:S) {
att[s] = att_raw[s] - mean(att_raw[s]);
def[s] = def_raw[s] - mean(def_raw[s]);
}
}
model {
// Priors
for (s in 1:S) {
home_advantage[s] ~ normal(0, 1);
goal_mean[s] ~ normal(0, 1);
sigma_att ~ normal(0, 1);
sigma_def ~ normal(0, 1);
att_raw[s] ~ normal(0, sigma_att);
def_raw[s] ~ normal(0, sigma_def);
}
// Likelihood: Model actual goals using Poisson distribution with log link
for (i in 1:N) {
// Home team's goals
home_goals[i] ~ poisson_log(
home_advantage[season[i]] +
att[season[i], home_team[i]] +
def[season[i], away_team[i]] +
goal_mean[season[i]]
);
// Away team's goals
away_goals[i] ~ poisson_log(
att[season[i], away_team[i]] +
def[season[i], home_team[i]] +
goal_mean[season[i]]
);
}
}
"
fit <- stan(
model_code = nhl_stan_model,
data = nhl_stan_data,
iter = 4000,
warmup = 1000,
chains = 2,
cores = 6,
seed = 1967,
init = "random",
control = list(max_treedepth = 10))
posterior <- rstan::extract(fit)
agg_strength <- posterior$att[, 9, ] - posterior$def[, 9, ]
agg_strength_df <- melt(agg_strength)
colnames(agg_strength_df) <- c('Iteration', 'Team', 'Strength')
team_names <- names(team_ids)
ordered_team_names <- sort(team_names)
team_mapping <- match(team_names, ordered_team_names)
agg_strength_df$Team <- factor(team_mapping[agg_strength_df$Team], levels = 1:length(ordered_team_names), labels = ordered_team_names)
ggplot(agg_strength_df, aes(x = Strength, fill = Team)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = 0, color = 'red',  linetype = 'dashed') +
facet_wrap(~ Team, scale = 'free', labeller = labeller(Team = label_value)) +
ggtitle('Distribution of Aggregate Team Strengths') +
xlab('Aggregate Strength') +
ylab('Density') + scale_fill_viridis_d(option = 'C', direction = 1) +
theme_minimal() +
theme(legend.position = 'none')
